<Application x:Class="All_New_Jongbet.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:All_New_Jongbet"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!-- NEW: TradeSetup 페이지 전용 컨트롤 스타일 -->
        <Style x:Key="SettingLabelStyleL1" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="SettingLabelStyleL2" TargetType="StackPanel" BasedOn="{StaticResource SettingLabelStyleL1}">
            <Style.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="FontSize" Value="11"/>
                    <Setter Property="Foreground" Value="#8898aa"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="SettingTextBoxStyle" TargetType="TextBox">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="#dee2e6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="SettingComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="#dee2e6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="SettingExpanderStyle" TargetType="Expander">
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Border Background="White" CornerRadius="4" BorderBrush="#e9ecef" BorderThickness="1">
                            <StackPanel>
                                <Border x:Name="HeaderBorder" Background="#f6f9fc" CornerRadius="4,4,0,0" Padding="15,10">
                                    <Grid>
                                        <ContentPresenter ContentSource="Header" VerticalAlignment="Center"/>
                                        <ToggleButton x:Name="HeaderSite" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="ContentSite" Visibility="Collapsed" Margin="15"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PeriodButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#8898aa"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#32325d"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="#5e72e4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <!-- Sidebar ToggleButton Style -->
        <Style TargetType="ToggleButton" x:Key="SidebarButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#525f7f"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="20,15"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4" Padding="{TemplateBinding Padding}" Margin="10,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" FontFamily="Segoe MDL2 Assets" FontSize="16" VerticalAlignment="Center" Margin="0,0,15,0"/>
                                <ContentPresenter Grid.Column="1" VerticalAlignment="Center"/>
                                <TextBlock Grid.Column="2" x:Name="Indicator" Text="▶" VerticalAlignment="Center" Visibility="Collapsed" FontSize="10" Margin="0,0,5,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#32325d"/>
                                <Setter Property="Background" Value="#f6f9fc"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="#5e72e4"/>
                                <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Sidebar Expander Style -->
        <Style x:Key="SidebarExpanderStyle" TargetType="Expander">
            <Setter Property="Foreground" Value="#525f7f"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <StackPanel>
                            <Border x:Name="HeaderBorder" Background="Transparent" CornerRadius="4" Margin="10,0">
                                <Grid>
                                    <ToggleButton x:Name="HeaderSite" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0"/>
                                    <StackPanel Orientation="Horizontal" Margin="20,15" IsHitTestVisible="False">
                                        <TextBlock Text="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" FontFamily="Segoe MDL2 Assets" FontSize="16" VerticalAlignment="Center" Margin="0,0,15,0"/>
                                        <ContentPresenter ContentSource="Header" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <TextBlock Text="❯" FontSize="10" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,15,0" Foreground="#adb5bd" IsHitTestVisible="False">
                                        <TextBlock.RenderTransform>
                                            <RotateTransform x:Name="IndicatorTransform" Angle="0" CenterX="2.5" CenterY="5"/>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="ContentSite" Visibility="Collapsed" Margin="20,0,0,0"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="#f6f9fc"/>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Visible"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="IndicatorTransform" Storyboard.TargetProperty="Angle" To="90" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="IndicatorTransform" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <DataTrigger Binding="{Binding IsSetupMenuActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="#eef2ff"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Sidebar Footer Button Style -->
        <Style x:Key="SidebarFooterButton" TargetType="Button">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="#8898aa"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="20,8"/>
            <Setter Property="Margin" Value="10,0,10,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" FontFamily="Segoe MDL2 Assets" FontSize="16" VerticalAlignment="Center" Margin="0,0,15,0"/>
                                <ContentPresenter Grid.Column="1" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#32325d"/>
                                <Setter Property="Background" Value="#f6f9fc"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Card Style -->
        <Style x:Key="KPICard" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="25"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="1" Color="#112d5d" Opacity="0.1" BlurRadius="10"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Text Styles -->
        <Style x:Key="CardTitle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#8898aa"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
        </Style>
        <Style x:Key="CardValue" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#32325d"/>
        </Style>
        <Style x:Key="CardValuePositive" TargetType="TextBlock" BasedOn="{StaticResource CardValue}">
            <Setter Property="Foreground" Value="#2dce89"/>
        </Style>
        <Style x:Key="CardValueNegative" TargetType="TextBlock" BasedOn="{StaticResource CardValue}">
            <Setter Property="Foreground" Value="#f5365c"/>
        </Style>

        <!-- Notification Label Styles -->
        <Style x:Key="RoundedRectLabelStyle" TargetType="Label">
            <Setter Property="Padding" Value="15,6"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PillLabelStyle" TargetType="Label">
            <Setter Property="Padding" Value="15,6"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border Background="{TemplateBinding Background}" CornerRadius="15" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StatusLabel" TargetType="Label" BasedOn="{StaticResource RoundedRectLabelStyle}">
            <Setter Property="Background" Value="#e8f5e9"/>
            <Setter Property="Foreground" Value="#388e3c"/>
        </Style>
        <Style x:Key="RequestingStatusLabel" TargetType="Label" BasedOn="{StaticResource RoundedRectLabelStyle}">
            <Setter Property="Background" Value="#fff3cd"/>
            <Setter Property="Foreground" Value="#856404"/>
        </Style>
        <Style x:Key="BuyLabel" TargetType="Label" BasedOn="{StaticResource PillLabelStyle}">
            <Setter Property="Background" Value="#fce4ec"/>
            <Setter Property="Foreground" Value="#c2185b"/>
        </Style>
        <Style x:Key="SellLabel" TargetType="Label" BasedOn="{StaticResource PillLabelStyle}">
            <Setter Property="Background" Value="#e3f2fd"/>
            <Setter Property="Foreground" Value="#1976d2"/>
        </Style>

        <!-- ScrollBar Styles -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="border" Background="#adb5bd" CornerRadius="4"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#8898aa"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#5e72e4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" Margin="{TemplateBinding Padding}">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Action Button Styles -->
        <Style x:Key="PrimaryActionButton" TargetType="Button">
            <Setter Property="Background" Value="#5e72e4"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="30,10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#4a5cc5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#323d8c"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#e9ecef"/>
                                <Setter Property="Foreground" Value="#adb5bd"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SecondaryActionButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#5e72e4"/>
            <Setter Property="BorderBrush" Value="#5e72e4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#5e72e4"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#4a5cc5"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#f8f9fa"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#e9ecef"/>
                                <Setter Property="Foreground" Value="#ced4da"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid Styles -->
        <Style TargetType="DataGrid">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#e9ecef"/>
        </Style>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="DataGridRow">
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="#e9ecef"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#eff6ff"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#dbeafe"/>
                    <Setter Property="BorderBrush" Value="#dbeafe"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#1e3a8a"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CenterAlignedCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style>
        <Style x:Key="StatusCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource CenterAlignedCellStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="Active">
                    <Setter Property="Foreground" Value="#2dce89"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Inactive">
                    <Setter Property="Foreground" Value="#adb5bd"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RightAlignedCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="TextBlock.TextAlignment" Value="Right"/>
            <Setter Property="Padding" Value="0,0,10,0"/>
        </Style>

        <local:ProfitLossColorConverter x:Key="ProfitLossColorConv"/>

        <SolidColorBrush x:Key="BuyOrderStatusBrush" Color="#ef9a9a"/>
        <SolidColorBrush x:Key="SellOrderStatusBrush" Color="#90caf9"/>

        <Style x:Key="OrderLogItemStyle" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="3,0,0,0"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
        </Style>

        <local:StyleNameToStyleConverter x:Key="StyleConverter"/>

        <!-- NEW: Order Que 카드 배경색 브러시 -->
        <SolidColorBrush x:Key="BuyOrderCardBrush" Color="#ffebee"/>
        <SolidColorBrush x:Key="SellOrderCardBrush" Color="#e3f2fd"/>
        <SolidColorBrush x:Key="CancelOrderCardBrush" Color="#f5f5f5"/>

        
    </Application.Resources>
</Application>
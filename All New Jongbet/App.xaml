<Application x:Class="All_New_Jongbet.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:All_New_Jongbet"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <SolidColorBrush x:Key="PrimaryBackground" Color="#2d2d30"/>
        <SolidColorBrush x:Key="SecondaryBackground" Color="#3c3c3c"/>
        <SolidColorBrush x:Key="PrimaryText" Color="#f1f1f1"/>
        <SolidColorBrush x:Key="SecondaryText" Color="#a0a0a0"/>
        <SolidColorBrush x:Key="BorderColor" Color="#373737"/>
        <SolidColorBrush x:Key="AccentPurple" Color="#5e72e4"/>

        <!-- [CHANGED] 눈이 편안한 색상으로 변경 및 키 이름 수정 -->
        <SolidColorBrush x:Key="PositiveRedBrush" Color="#E57373"/>
        <SolidColorBrush x:Key="NegativeBlueBrush" Color="#64B5F6"/>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
        </Style>

        <Style x:Key="SettingLabelStyleL1" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="SettingLabelStyleL2" TargetType="StackPanel" BasedOn="{StaticResource SettingLabelStyleL1}">
            <Style.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="FontSize" Value="11"/>
                    <Setter Property="Foreground" Value="{StaticResource SecondaryText}"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="SettingTextBoxStyle" TargetType="TextBox">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
        </Style>

        <Style x:Key="DarkComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="{StaticResource NegativeBlueBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SettingComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource DarkComboBoxItemStyle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                          Focusable="false"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="20" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border"
                                                    Grid.ColumnSpan="2"
                                                    Background="{StaticResource PrimaryBackground}"
                                                    BorderBrush="{StaticResource BorderColor}"
                                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                            <Path x:Name="Arrow"
                                                  Grid.Column="1"
                                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                                  Fill="{StaticResource PrimaryText}"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                                        </Grid>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="8,5,25,5"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left" />
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="{StaticResource SecondaryBackground}"
                                            BorderThickness="1"
                                            BorderBrush="{StaticResource BorderColor}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SettingExpanderStyle" TargetType="Expander">
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Border Background="{StaticResource SecondaryBackground}" CornerRadius="4" BorderBrush="{StaticResource BorderColor}" BorderThickness="1">
                            <StackPanel>
                                <Border x:Name="HeaderBorder" Background="#454545" CornerRadius="4,4,0,0" Padding="15,10">
                                    <Grid>
                                        <ContentPresenter ContentSource="Header" VerticalAlignment="Center"/>
                                        <ToggleButton x:Name="HeaderSite" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="ContentSite" Visibility="Collapsed" Margin="15"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PeriodButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter TargetName="border" Property="Background" Value="{StaticResource SecondaryBackground}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource AccentPurple}"/>
                                <Setter TargetName="border" Property="Background" Value="{StaticResource SecondaryBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ToggleButton" x:Key="SidebarButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,15"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6" Padding="{TemplateBinding Padding}" Margin="10,5">
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" 
                                           FontFamily="Segoe MDL2 Assets" 
                                           FontSize="30" 
                                           HorizontalAlignment="Center"/>
                                <ContentPresenter VerticalAlignment="Center" Margin="0,5,0,0"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="#3e3e42"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="{StaticResource AccentPurple}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SidebarExpanderStyle" TargetType="Expander">
            <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <StackPanel>
                            <Border x:Name="HeaderBorder" CornerRadius="6" Margin="10,5">
                                <Grid>
                                    <ToggleButton x:Name="HeaderSite" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0"/>
                                    <StackPanel Orientation="Vertical" Margin="10,15" IsHitTestVisible="False">
                                        <TextBlock Text="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" 
                                                   FontFamily="Segoe MDL2 Assets" 
                                                   FontSize="30" 
                                                   HorizontalAlignment="Center"/>
                                        <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" Margin="0,5,0,0"/>
                                    </StackPanel>
                                    <TextBlock Text="❯" FontSize="10" Visibility="Collapsed"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="ContentSite" Visibility="Collapsed" Margin="0"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="#3e3e42"/>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding IsSetupMenuActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="#3e3e42"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SidebarFooterButton" TargetType="Button">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="{StaticResource SecondaryText}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="10,15"/>
            <Setter Property="Margin" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6" Padding="{TemplateBinding Padding}">
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" 
                                           FontFamily="Segoe MDL2 Assets" 
                                           FontSize="20" 
                                           HorizontalAlignment="Center"/>
                                <ContentPresenter VerticalAlignment="Center" Margin="0,5,0,0"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
                                <Setter Property="Background" Value="#3e3e42"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="KPICard" TargetType="Border">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#373737" Offset="0.0" />
                        <GradientStop Color="#303030" Offset="1.0" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="CornerRadius" Value="16"/>
            <Setter Property="Padding" Value="25"/>
        </Style>

        <Style x:Key="CardTitle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource SecondaryText}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
        </Style>
        <Style x:Key="CardValue" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
        </Style>
        <Style x:Key="CardValuePositive" TargetType="TextBlock" BasedOn="{StaticResource CardValue}">
            <Setter Property="Foreground" Value="{StaticResource PositiveRedBrush}"/>
        </Style>
        <Style x:Key="CardValueNegative" TargetType="TextBlock" BasedOn="{StaticResource CardValue}">
            <Setter Property="Foreground" Value="{StaticResource NegativeBlueBrush}"/>
        </Style>

        <Style x:Key="RoundedRectLabelStyle" TargetType="Label">
            <Setter Property="Padding" Value="15,6"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PillLabelStyle" TargetType="Label">
            <Setter Property="Padding" Value="15,6"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border Background="{TemplateBinding Background}" CornerRadius="15" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StatusLabel" TargetType="Label" BasedOn="{StaticResource RoundedRectLabelStyle}">
            <Setter Property="Background" Value="#2E4A30"/>
            <Setter Property="Foreground" Value="#A5D6A7"/>
        </Style>
        <Style x:Key="RequestingStatusLabel" TargetType="Label" BasedOn="{StaticResource RoundedRectLabelStyle}">
            <Setter Property="Background" Value="#4A412A"/>
            <Setter Property="Foreground" Value="#FFF59D"/>
        </Style>
        <Style x:Key="BuyLabel" TargetType="Label" BasedOn="{StaticResource PillLabelStyle}">
            <Setter Property="Background" Value="#4A2E35"/>
            <Setter Property="Foreground" Value="#F48FB1"/>
        </Style>
        <Style x:Key="SellLabel" TargetType="Label" BasedOn="{StaticResource PillLabelStyle}">
            <Setter Property="Background" Value="#2A3A4A"/>
            <Setter Property="Foreground" Value="#90CAF9"/>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="border" Background="#555" CornerRadius="4"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#777"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#999"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" Margin="{TemplateBinding Padding}">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PrimaryActionButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource AccentPurple}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="30,10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#4a5cc5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#323d8c"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="Transparent"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#444"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SecondaryActionButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource AccentPurple}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentPurple}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentPurple}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#4a5cc5"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="Transparent"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#444"/>
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderColor}"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource SecondaryText}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
        </Style>

        <Style TargetType="DataGridRow">
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3e3e42"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource NegativeBlueBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CenterAlignedCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style>
        <Style x:Key="StatusCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="Active">
                    <Setter Property="Foreground" Value="{StaticResource PositiveRedBrush}"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Inactive">
                    <Setter Property="Foreground" Value="#6c6c6c"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RightAlignedCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="TextBlock.TextAlignment" Value="Right"/>
            <Setter Property="Padding" Value="0,0,10,0"/>
        </Style>

        <local:ProfitLossColorConverter x:Key="ProfitLossColorConv"/>
        <!-- NEW: Dashboard의 Today's Orders 카드 스타일을 위해 컨버터 추가 -->
        <local:ResourceKeyToBrushConverter x:Key="ResourceKeyToBrushConverter"/>

        <local:IndexConverter x:Key="IndexConverter"/>

        <SolidColorBrush x:Key="BuyOrderStatusBrush" Color="#D32F2F"/>
        <SolidColorBrush x:Key="SellOrderStatusBrush" Color="#1976D2"/>
        <Style x:Key="OrderLogItemStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="BorderThickness" Value="3,0,0,0"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
        </Style>

        <local:StyleNameToStyleConverter x:Key="StyleConverter"/>

        <SolidColorBrush x:Key="BuyOrderCardBrush" Color="#D32F2F"/>
        <SolidColorBrush x:Key="SellOrderCardBrush" Color="#1976D2"/>
        <SolidColorBrush x:Key="CancelOrderCardBrush" Color="#FFC107"/>
        <SolidColorBrush x:Key="DefaultOrderCardBrush" Color="#BDBDBD"/>

        <Style x:Key="WindowControlButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource SecondaryText}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="8,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                            <TextBlock Text="{TemplateBinding Content}" 
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource BorderColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="WindowCloseButton" TargetType="Button" BasedOn="{StaticResource WindowControlButton}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PositiveRedBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PlainButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
